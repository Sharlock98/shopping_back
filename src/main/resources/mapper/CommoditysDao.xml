<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.shopping_back.dao.CommoditysDao">
  <resultMap id="BaseResultMap" type="com.example.shopping_back.entity.Commoditys">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="CHAR" property="name" />
    <result column="img" jdbcType="VARCHAR" property="img" />
    <result column="price" jdbcType="FLOAT" property="price" />
    <result column="brand" jdbcType="CHAR" property="brand" />
    <result column="exchange_policy" jdbcType="CHAR" property="exchangePolicy" />
    <result column="category" jdbcType="CHAR" property="category" />
    <result column="freight" jdbcType="CHAR" property="freight" />
    <result column="server" jdbcType="VARCHAR" property="server" />
    <result column="specifications" jdbcType="VARCHAR" property="specifications" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="returns_policy" jdbcType="CHAR" property="returnsPolicy" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, img, price, brand, exchange_policy, category, freight, server, specifications, 
    introduction, returns_policy, detail
  </sql>
  <select id="selectAllCommodity" resultType="com.example.shopping_back.entity.Commoditys">
    SELECT * FROM commoditys ORDER BY id DESC
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from commoditys
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from commoditys
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <select id="selectByName" resultType="com.example.shopping_back.entity.Commoditys">
    select * from commoditys where name like concat('%',#{name},'%')
  </select>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.shopping_back.entity.Commoditys" useGeneratedKeys="true">
    insert into commoditys (`name`, img, price, 
      brand, exchange_policy, category, 
      freight, server, specifications, 
      introduction, returns_policy, detail
      )
    values (#{name,jdbcType=CHAR}, #{img,jdbcType=VARCHAR}, #{price,jdbcType=FLOAT}, 
      #{brand,jdbcType=CHAR}, #{exchangePolicy,jdbcType=CHAR}, #{category,jdbcType=CHAR}, 
      #{freight,jdbcType=CHAR}, #{server,jdbcType=VARCHAR}, #{specifications,jdbcType=VARCHAR}, 
      #{introduction,jdbcType=VARCHAR}, #{returnsPolicy,jdbcType=CHAR}, #{detail,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.shopping_back.entity.Commoditys" useGeneratedKeys="true">
    insert into commoditys
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="exchangePolicy != null">
        exchange_policy,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="freight != null">
        freight,
      </if>
      <if test="server != null">
        server,
      </if>
      <if test="specifications != null">
        specifications,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="returnsPolicy != null">
        returns_policy,
      </if>
      <if test="detail != null">
        detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=FLOAT},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=CHAR},
      </if>
      <if test="exchangePolicy != null">
        #{exchangePolicy,jdbcType=CHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=CHAR},
      </if>
      <if test="freight != null">
        #{freight,jdbcType=CHAR},
      </if>
      <if test="server != null">
        #{server,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null">
        #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="returnsPolicy != null">
        #{returnsPolicy,jdbcType=CHAR},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.shopping_back.entity.Commoditys">
    update commoditys
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=CHAR},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=FLOAT},
      </if>
      <if test="brand != null">
        brand = #{brand,jdbcType=CHAR},
      </if>
      <if test="exchangePolicy != null">
        exchange_policy = #{exchangePolicy,jdbcType=CHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=CHAR},
      </if>
      <if test="freight != null">
        freight = #{freight,jdbcType=CHAR},
      </if>
      <if test="server != null">
        server = #{server,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null">
        specifications = #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="returnsPolicy != null">
        returns_policy = #{returnsPolicy,jdbcType=CHAR},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.shopping_back.entity.Commoditys">
    update commoditys
    set `name` = #{name,jdbcType=CHAR},
      img = #{img,jdbcType=VARCHAR},
      price = #{price,jdbcType=FLOAT},
      brand = #{brand,jdbcType=CHAR},
      exchange_policy = #{exchangePolicy,jdbcType=CHAR},
      category = #{category,jdbcType=CHAR},
      freight = #{freight,jdbcType=CHAR},
      server = #{server,jdbcType=VARCHAR},
      specifications = #{specifications,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      returns_policy = #{returnsPolicy,jdbcType=CHAR},
      detail = #{detail,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>